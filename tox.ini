# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
cov_path = {toxinidir}/htmlcov
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
upstream_path = {toxinidir}/upstream/
tst_data_path = {toxinidir}/tests/data/
all_path = {[vars]src_path} {[vars]tst_path} {[vars]upstream_path}

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1

[testenv:format]
description = Apply coding style standards to code
deps =
    ruff
commands =
    ruff format {[vars]all_path}
    ruff check --fix {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
setenv =
  PYTHONPATH = {envdir}{:}{[vars]lib_path}
deps =
    mypy
    ruff
    pydantic[mypy]
    types-PyYAML
commands =
    ruff format --check {[vars]all_path}
    ruff check {[vars]all_path}
    mypy {[vars]src_path}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    pytest-cov
    ipdb
    -r{toxinidir}/requirements.txt
commands =
   pytest --cov={[vars]src_path} \
          --cov-report=term-missing --cov-report=html \
          --ignore={[vars]tst_path}integration \
          -vv --tb native -s \
          {posargs:tests/unit}

[testenv:integration]
description = Run integration tests
deps =
    pytest
    pytest-operator
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native \
    --asyncio-mode=auto \
    --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}

[testenv:update]
deps =
    pyyaml
    semver
commands =
    python {toxinidir}/upstream/update.py {posargs}

