# Learn more about charmcraft.yaml configuration at:
# https://juju.is/docs/sdk/charmcraft-config

# Architectures based on supported arch's in upstream
# https://github.com/kubernetes/cloud-provider-aws/blob/f33bf21384e7fba50052b1fb8774b76ffd268d50/Makefile
type: "charm"

name: aws-cloud-provider
title: AWS Cloud Provider
summary: Runs the AWS Cloud Provider in the cluster.
description: >-
  The aws cloud provider provides the Kubernetes cluster access to
  native resources from aws such as load-balancers
links:
  contact: https://launchpad.net/~containers
  source:
  - https://github.com/charmed-kubernetes/aws-cloud-provider
  issues:
  - https://bugs.launchpad.net/charm-aws-cloud-provider
  documentation: https://discourse.charmhub.io/t/aws-cloud-provider-docs-index/9599

subordinate: true

config:
  options:
    # Global options
    control-node-selector:
      description: |
        Specifies to which nodes this charm adds the aws-ccm daemonsets
        Declare node labels in key=value format, separated by spaces.
        It's also valid to not have a value, this is interpretted as an empty string.

        Required if not related to kubernetes-control-plane:kube-control

        e.g. 
          node-role.kubernetes.io/control-plane=custom-value
          node-role.kubernetes.io/control-plane=
      type: string

    provider-release:
      type: string
      description: |
        Specify the version of cloud-provider as defined by the `releases`
        directory of https://github.com/kubernetes/cloud-provider-aws/

        example)
          juju config aws-cloud-provider provider-release='v1.26.1'
        
        A list of supported versions is available through the action:
          juju run-action aws-cloud-provider/0 list-releases --wait
        
        To reset by to the latest supported by the charm use:
          juju config aws-cloud-provider --reset provider-release
        
        The current release deployed is available by viewing
          juju status aws-cloud-provider

    controller-extra-args:
      type: string
      default: ""
      description: |
        Space separated list of flags and key=value pairs that will be passed as arguments to
        aws-cloud-controller-manager. For example a value like this:
          cluster_cidr=192.160.0.0/16 v=3
        will result in aws-cloud-controller-manager being run with the following options:
          --cluster_cidr=192.160.0.0/16 --v=3

actions:
  list-versions:
    description: List Cloud Provider and Storage Versions supported by this charm
  list-resources:
    description: List Cloud Provider and Storage Resources of configured version
    params:
      controller:
        type: string
        default: ""
        description: |
          Filter list based on "provider" or "storage" manifests.
      resources:
        type: string
        default: ""
        description: |
          Space separated list of kubernetes resource types to filter list result
  scrub-resources:
    description: Remove deployments other than the current one
    params:
      controller:
        type: string
        default: ""
        description: |
          Filter list based on "provider" or "storage" manifests.
      resources:
        type: string
        default: ""
        description: |
          Space separated list of kubernetes resource types to filter scrubbing   
  sync-resources:
    description: |
      Add kubernetes resources which should be created by this charm which aren't
      present within the cluster.
    params:
      controller:
        type: string
        default: ""
        description: |
          Filter list based on "storage" manifests.
      resources:
        type: string
        default: ""
        description: |
          Space separated list of kubernetes resource types
          to use a filter during the sync. This helps limit
          which missing resources are applied.

provides:
  external-cloud-provider:
    interface: external_cloud_provider
    limit: 1

requires:
  aws-integration:
    interface: aws-integration
    scope: container
    limit: 1
  kube-control:
    interface: kube-control
    limit: 1
  certificates:
    interface: tls-certificates

bases:
- build-on:
  - name: "ubuntu"
    channel: "22.04"
    architectures: ["amd64"]
  run-on:
  - name: "ubuntu"
    channel: "22.04"
    architectures:
    - amd64
    - arm64
  - name: "ubuntu"
    channel: "24.04"
    architectures:
    - amd64
    - arm64
parts:
  charm:
    source: .
    plugin: charm
    override-build: |
      craftctl default
      git -C $CRAFT_PROJECT_DIR rev-parse --short HEAD > $CRAFT_PRIME/version
    build-packages:
    - git
    charm-python-packages:
    - setuptools
    - pip
    prime:
    - upstream/**
